<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns:sch="http://purl.oclc.org/dsdl/schematron" xmlns="http://www.tei-c.org/ns/1.0">
  <teiHeader>
    <fileDesc>
      <titleStmt>
        <title>ODD File for Homer's Odyssey</title>
      </titleStmt>
      <publicationStmt>
        <publisher>Claire Zak, Texas A&amp;M University</publisher>
        <availability>
          <p>This is an open access work licensed under a Creative Commons Attribution 4.0 International license.</p>
        </availability>
      </publicationStmt>
      <sourceDesc>
        <p>Born Digital</p>
      </sourceDesc>
    </fileDesc>
  </teiHeader>
  <text>
    <body>
      <schemaSpec ident="oddex1" start="TEI">
        <moduleRef key="header"/>
        <moduleRef key="core"/>
        <moduleRef key="tei"/>
        <moduleRef key="textstructure" exclude="div1 div2 div3 div4 div5 div6 div7"/>
        <moduleRef key="namesdates"/>
        <elementSpec module="namesdates" ident="persName" mode="change">
          <attList>
            <attDef ident="type" mode="change" usage="opt">
              <datatype>
                <dataRef key="teidata.enumerated"/>
              </datatype>
              <valList type="closed" mode="change">
                <valItem ident="deity"></valItem>
                <valItem ident="author"></valItem>
                <valItem ident="translator"></valItem>
              </valList>
            </attDef>
          </attList>
          <exemplum>
            <eg>Sing to me of the man, Muse, the man of twists and turns ...</eg>
          </exemplum>
          <remarks>
            <p>In this example, the name "Muse" would be put into a persName element followed by an attribute with the type "deity" since the Muses in Greek mythology are goddesses.</p>
          </remarks>
        </elementSpec>
       
        <elementSpec ident="persName" module="namesdates" mode="change">
          <constraintSpec ident="ref-on-persName" scheme="schematron">
            <constraint>
              <sch:rule context="tei:persName/@ref">
                <sch:let name="standoff" value="doc('https://raw.githubusercontent.com/czak79/HIST630/main/OdysseyStandoffMarkup.xml')"/>
                <sch:let name="personIDs"
                  value="$standoff//tei:person/@xml:id"/>
                <sch:let name="persRef" value="for $i in $personIDs return concat('#', $i)"></sch:let>
                <sch:let name="error" value ="."/>
                <sch:assert test=". = $persRef" role="warning">
                  <sch:value-of select="$error"/> is not currently in use.
                </sch:assert>        
              </sch:rule>
            </constraint>
          </constraintSpec>
          <exemplum>
            <eg>Sing to me of the man, Muse, the man of twists and turns ...</eg>
          </exemplum>
          <remarks>
            <p>In this example, the name "Muse" would be associated with a reference ID associated only with Muse. These values are listed in the standoff markup.</p>
          </remarks>
        </elementSpec>
        
        <elementSpec ident="placeName" module="namesdates" mode="change">
          <constraintSpec ident="ref-on-placeName" scheme="schematron">
            <constraint>
              <sch:rule context="tei:placeName/@ref">
                <sch:let name="standoff" value="doc('https://raw.githubusercontent.com/czak79/HIST630/main/OdysseyStandoffMarkup.xml')"/>
                <sch:let name="placeIDs"
                  value="$standoff//tei:place/@xml:id"/>
                <sch:let name="placeRef" value="for $i in $placeIDs return concat('#', $i)"></sch:let>
                <sch:let name="error" value ="."/>
                <sch:assert test=". = $placeRef" role="warning">
                  <sch:value-of select="$error"/> is not currently in use.
                </sch:assert>        
              </sch:rule>
            </constraint>
          </constraintSpec>
          <exemplum>
            <eg>the hallowed heights of Troy</eg>
          </exemplum>
          <remarks>
            <p>In this example, the place name "Troy" would be associated with a reference ID associated only with that city. These values are listed in the standoff markup.</p>
          </remarks>
        </elementSpec>
      
      <elementSpec ident="orgName" module="namesdates" mode="change">
        <constraintSpec ident="ref-on-orgName" scheme="schematron">
          <constraint>
            <sch:rule context="tei:orgName/@ref">
              <sch:let name="standoff" value="doc('https://raw.githubusercontent.com/czak79/HIST630/main/OdysseyStandoffMarkup.xml')"/>
              <sch:let name="orgIDs"
                value="$standoff//tei:org/@xml:id"/>
              <sch:let name="orgRef" value="for $i in $orgIDs return concat('#', $i)"></sch:let>
              <sch:let name="error" value ="."/>
              <sch:assert test=". = $orgRef" role="warning">
                <sch:value-of select="$error"/> is not currently in use.
              </sch:assert>        
            </sch:rule>
          </constraint>
        </constraintSpec>
        <exemplum>
          <eg>But now Poseidon had gone to visit the Ethiopians worlds away</eg>
        </exemplum>
        <remarks>
          <p>In this example, "Ethiopians" would be associated with a reference ID associated only with that organization. Likewise, Poseidon would be associated with a persName ID. These values are listed in the standoff markup.</p>
        </remarks>
      </elementSpec>
        
      </schemaSpec>
    </body>
  </text>
</TEI>
